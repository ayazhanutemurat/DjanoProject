# Generated by Django 3.2 on 2021-05-14 19:52

import common.validators
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='GroupProperties',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
            ],
            options={
                'verbose_name': 'Группа свойств',
                'verbose_name_plural': 'Группы свойств',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('discount', models.IntegerField(blank=True, null=True, verbose_name='Скидка')),
                ('current_price', models.IntegerField(verbose_name='Текущая цена')),
                ('real_price', models.IntegerField(default='current_price', verbose_name='Настоящая цена')),
                ('image', models.ImageField(blank=True, null=True, upload_to='product_images', validators=[common.validators.validate_file_size, common.validators.validate_extension])),
                ('is_recommended', models.BooleanField(default=False, verbose_name='Рекомендованный')),
                ('is_popular', models.BooleanField(default=False, verbose_name='Популярный')),
                ('is_new', models.BooleanField(default=False, verbose_name='Новинка')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='core.brand', verbose_name='Бренд')),
                ('category', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='core.category', verbose_name='Категория товара')),
            ],
            options={
                'verbose_name': 'Товар',
                'verbose_name_plural': 'Товары',
            },
        ),
        migrations.CreateModel(
            name='Property',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200, verbose_name='Наименование')),
                ('detail', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('is_description', models.BooleanField(default=False, verbose_name='Входит в описание')),
                ('is_filter', models.BooleanField(default=False, verbose_name='Фильтр поиска')),
                ('group', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='properties', to='market.groupproperties', verbose_name='Группа')),
            ],
            options={
                'verbose_name': 'Свойство',
                'verbose_name_plural': 'Свойства',
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review', models.TextField(blank=True, null=True, verbose_name='Отзыв')),
                ('rating', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Кол-во звездочек')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Оценивание товара',
                'verbose_name_plural': 'Оценивание товаров',
                'ordering': ('rating',),
            },
        ),
        migrations.CreateModel(
            name='ProductCharacteristics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=1000, verbose_name='Значение')),
                ('property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='values', to='market.property', verbose_name='Свойство')),
            ],
            options={
                'verbose_name': 'Характеристика товара',
                'verbose_name_plural': 'Характеристики товаров',
            },
        ),
        migrations.CreateModel(
            name='ProductAvailability',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.IntegerField(verbose_name='Количество товаров')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='market.product', verbose_name='Товар')),
                ('shop', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='avalability', to='core.shop', verbose_name='Магазин')),
            ],
            options={
                'verbose_name': 'Наличие товара',
                'verbose_name_plural': 'Наличие товаров',
            },
        ),
        migrations.AddField(
            model_name='product',
            name='characteristics',
            field=models.ManyToManyField(blank=True, null=True, related_name='product', to='market.ProductCharacteristics', verbose_name='Характеристики'),
        ),
        migrations.AddField(
            model_name='product',
            name='reviews',
            field=models.ManyToManyField(blank=True, null=True, related_name='product', to='market.ProductReview', verbose_name='Оценивание товара'),
        ),
    ]
